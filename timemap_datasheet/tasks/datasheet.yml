
- name: clean datasheet repo state
  file:
    state: absent
    path: datasheet-server

- name: checkout develop branch of datasheet
  git:
    repo: "{{ lookup('env', 'DATASHEET_GIT_REPOSITORY') or 'https://github.com/forensic-architecture/datasheet-server' }}"
    dest: datasheet-server
    version: "{{ lookup('env', 'DATASHEET_GIT_BRANCH') or 'develop' }}"
    
- name: create credentials folder if it does not already exist
  file:
    path: credentials
    state: directory

- name: copy .env to credentials folder
  template: src=templates/datasheet-env.j2 dest=credentials/{{application_name}}.env

- name: copy sheets_config.js to credentials folder
  template: >
    src=templates/datasheet_sheets_config.js.j2
    dest=credentials/{{ application_name }}_sheets_config.js

- name: copy .env to datasheet folder
  copy:
    remote_src: true
    src: credentials/{{ application_name }}.env
    dest: datasheet-server/.env

- name: copy sheets_config.js to datasheet folder
  copy:
    remote_src: true
    src: credentials/{{ application_name }}_sheets_config.js
    dest: datasheet-server/src/sheets_config.js

- name: remove container if exists
  docker_container:
    name: "{{ application_name }}_datasheet"
    state: absent
    force_kill: true

- name: remove image if exists
  docker_image:
    state: absent
    name: "{{ application_name }}_datasheet_prod"
    force: true

- name: build docker image
  docker_image:
    path: datasheet-server
    name: "{{ application_name }}_datasheet_prod"

- name: run datasheet-server in container
  docker_container:
    name: "{{ application_name }}_datasheet"
    image: "{{ application_name }}_datasheet_prod"
    ports:
      - "0.0.0.0:{{ datasheet.port }}:8080"
